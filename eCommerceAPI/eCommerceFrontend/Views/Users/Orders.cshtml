@model eCommerceFrontend.Models.REST.Objects.UserResponse

@{
    ViewData["Title"] = "Orders";
    System.Diagnostics.Debug.WriteLine($"MY ORDERS {Model.Orders.Count}");

    var currentOrders = Model.Orders.Where(x => x.Stage == 1 || x.Stage == 2 || x.Stage == 3).ToList();
    var finishedOrders = Model.Orders.Where(x => x.Stage == 4).ToList();

    string getStage(int orderStatus)
    {
        switch (orderStatus)
        {
            case 1:
                return "Accepted";
            case 2:
                return "Processing";
            case 3:
                return "Travelling";
            case 4:
                return "Delivered";
            default:
                return "N/A";
        }
    }

    double calculatePrice(int quantity, double price)
    {
        return quantity * price;
    }
}

    <div class="container">
        <h1>Orders</h1>
        <hr />

        @if (currentOrders.Count > 0)
        {
            <h3>Current Orders:</h3>
            @foreach (var order in currentOrders)
            {
                <div class="container mb-1">
                    <div class="border border-dark bg-dark text-white">
                        <div class="row pl-2 pr-2">
                            <div class="text-left col-6 font-weight-bold">Status: @getStage(order.Stage).ToUpper()</div>
                            <div class="text-right col-6">Order # @order.OrderSKU</div>
                        </div>
                        <div class="row pl-2 pr-2">
                            <div class="text-left col-6">@order.OrderDate</div>
                            <div class="text-right col-6">@order.Address @order.Address2, @order.City</div>
                        </div>
                    </div>
                    <div>
                        @foreach (var orderDetails in order.OrderDetails)
                        {
                            <div class="container-fluid border border-top-0 border-dark">
                                <div class="row">
                                    <div class="col-3">
                                        <img src="~/img/notfound.png" style="width:100%" />
                                    </div>
                                    <div class="col-9 p-5">
                                        <div class="row">
                                            <div class="col-12">
                                                Name: @orderDetails.DetailName
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-12">
                                                Quantity: @orderDetails.DetailQuantity
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-12">
                                                Price: @orderDetails.DetailPrice
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-12">
                                                Total: @calculatePrice(orderDetails.DetailQuantity, double.Parse(orderDetails.DetailPrice))
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        }

        @if (finishedOrders.Count > 0)
        {
            <br />
            <h3>History:</h3>
            @foreach (var order in finishedOrders)
            {
                <div class="container mb-1">
                    <div class="border border-dark">
                        <div class="row pl-2 pr-2">
                            <div class="text-left col-6 font-weight-bold">Status: @getStage(order.Stage).ToUpper()</div>
                            <div class="text-right col-6">Order # @order.OrderSKU</div>
                        </div>
                        <div class="row pl-2 pr-2">
                            <div class="text-left col-6">@order.OrderDate</div>
                            <div class="text-right col-6">@order.Address @order.Address2, @order.City</div>
                        </div>

                        @foreach (var orderDetails in order.OrderDetails)
                        {
                            <div class="container-fluid border border-left-0 border-right-0 border-bottom-0 border-dark">
                                <div class="row">
                                    <div class="col-3">
                                        <img src="~/img/notfound.png" style="width:100%" />
                                    </div>
                                    <div class="col-9 p-5">
                                        <div class="row">
                                            <div class="col-12">
                                                Name: @orderDetails.DetailName
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-12">
                                                Quantity: @orderDetails.DetailQuantity
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-12">
                                                Price: @orderDetails.DetailPrice
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-12">
                                                Total: @calculatePrice(orderDetails.DetailQuantity, double.Parse(orderDetails.DetailPrice))
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        }




    </div>

